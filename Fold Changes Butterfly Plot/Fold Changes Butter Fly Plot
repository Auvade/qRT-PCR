---
title: "Fold Changes Butterfly Plot"
author: "Bodhi Hueffmeier"
date: "2025-07-31"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


This is the original code for the butterfly plot, which calculates fold changes and generates a plot based on gene expression data. The code processes the data to compute ΔCt and ΔΔCt values, excluding NTC samples and endogenous genes from the final plot. The resulting butterfly plot visualizes the log2 fold changes of target genes across different samples.
```{r}
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(readr)

# Set working directory (optional, adjust as needed)
# setwd("path/to/your/directory")

# Load in your data or the "Butterfly Plot Example Data.csv" file.
data <- read_csv("Butterfly Plot Example Data.csv")

# Ensure data structure is correct
str(data)

# Exclude NTC samples
data <- data %>%
  filter(Sample != "NTC")

# Define the reference sample and endogenous control
reference_sample <- "DMSO"

# Calculate ΔCt for each well using the corresponding endogenous control
data <- data %>%
  group_by(Well) %>%
  mutate(DeltaCt = Cq - Cq[Target == EndogenousPair]) %>%
  ungroup()

# Calculate average Cq values for each target and sample type
avg_cq_values <- data %>%
  group_by(Sample, Target) %>%
  summarise(AverageCq = mean(Cq, na.rm = TRUE)) %>%
  ungroup()

# Calculate reference sample ΔCt for each target
reference_means <- data %>%
  filter(Sample == reference_sample) %>%
  group_by(Target) %>%
  summarise(ReferenceDeltaCt = mean(DeltaCt, na.rm = TRUE)) %>%
  ungroup()

# Calculate ΔΔCt for each well relative to the mean ΔCt of the reference sample
data <- data %>%
  left_join(reference_means, by = "Target") %>%
  mutate(
    DeltaDeltaCt = DeltaCt - ReferenceDeltaCt,
    FoldChangeLog2 = -DeltaDeltaCt
  )

# Exclude reference samples and endogenous genes from plotting
endogenous_genes <- unique(data$EndogenousPair)
plot_data <- data %>%
  filter(Sample != reference_sample, !(Target %in% endogenous_genes))

# Calculate mean and standard error for each sample and target
summary_data <- plot_data %>%
  group_by(Sample, Target) %>%
  summarise(
    FoldChangeLog2_Mean = mean(FoldChangeLog2, na.rm = TRUE),
    FoldChangeLog2_SD = sd(FoldChangeLog2, na.rm = TRUE) / sqrt(n())
  ) %>%
  ungroup()

# Save the calculated values as a CSV file
write.csv(data, "calculated_values_excluding_endogenous.csv", row.names = FALSE)
write.csv(summary_data, "summary_stats_excluding_endogenous.csv", row.names = FALSE)

# Plot a butterfly plot with error bars and dots for wells
butterfly_plot <- ggplot(summary_data, aes(x = Target, y = FoldChangeLog2_Mean, fill = Target)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
  geom_errorbar(aes(ymin = FoldChangeLog2_Mean - FoldChangeLog2_SD, ymax = FoldChangeLog2_Mean + FoldChangeLog2_SD),
                width = 0.2, position = position_dodge(width = 0.7)) +
  geom_point(data = plot_data, aes(x = Target, y = FoldChangeLog2, fill = Target),
             position = position_dodge2(width = 0.7), size = 2, shape = 21) +
  labs(title = "Disease Biomarkers Gene Expression of 10 µM Compund 48h Treated Cell Line X", 
       x = "Target Genes", 
       y = "Log2 Fold Change", 
       fill = "Sample", 
       color = "Sample") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability

# Save plot
ggsave("butterfly_plot_excluding_endogenous.png", butterfly_plot, width = 10, height = 6)

# Show plot
print(butterfly_plot)
```
